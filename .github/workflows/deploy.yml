name: Deploy API on push to main

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      GOOGLE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
      GOOGLE_REGION: ${{ secrets.GCP_REGION }}
      GOOGLE_ZONE: ${{ secrets.GCP_ZONE }}

      TF_VAR_project: ${{ secrets.GCP_PROJECT_ID }}
      TF_VAR_region: ${{ secrets.GCP_REGION }}
      TF_VAR_zone: ${{ secrets.GCP_ZONE }}

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set GH_PAT environment variable
      run: echo "GH_PAT=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV

    - name: Set up Google Cloud credentials
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: CrÃ©er le fichier credentials.json dans infra/
      run: |
        mkdir -p infra
        echo '${{ secrets.GCP_SA_KEY }}' > infra/credentials.json

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform init
      working-directory: ./infra
      run: terraform init

    - name: Terraform apply
      working-directory: ./infra
      run: terraform apply -auto-approve

    - name: Get VM IP from Terraform output
      id: get_ip
      run: |
        echo "IP=$(terraform output -raw instance_ip)" >> $GITHUB_ENV

    - name: Set up SSH for Ansible
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Install Ansible
      run: |
        sudo apt update
        sudo apt install -y ansible python3-pip
        pip3 install --user ansible

    - name: Create Ansible inventory file
      run: |
        echo "[api]" > inventory.ini
        echo "$IP ansible_user=debian ansible_ssh_private_key_file=~/.ssh/id_rsa" >> inventory.ini

    - name: Run Ansible playbook
      run: ansible-playbook -i inventory.ini ansible/deploy.yml